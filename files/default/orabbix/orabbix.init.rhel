#!/bin/bash
# This is the init script for starting up the
# Orabbix daemon
#
# chkconfig: 345 91 10
# description: Starts and stops the orabbix daemon.
# processname: orabbix
#
# Source function library.
. /etc/rc.d/init.d/functions

# Get config.
. /etc/sysconfig/network

# Check that networking is up.
[ "${NETWORKING}" = "no" ] && exit 0

base="/opt/orabbix"
pidfile="/var/run/zabbix/orabbix.pid"
user="zabbix"
group="zabbix"
log4j_conf="/etc/zabbix/orabbix-log4j.properties"
main_conf="/etc/zabbix/orabbix.props"

# Fragile - convert this to systemd or proper upstart job
is_running() {
	if [[ -f "$pidfile" ]]; then
	    PID=$(cat $pidfile)
	    kill -0 $PID 2> /dev/null
	    if (( $? == 0 )); then
			echo "Orabbix Oracle data collector is running"
			return 1
	    else
			echo "Orabbix Oracle data collector is not running"
			return 0
	    fi
	fi
	# Again, another reason to use systemd
	PID=$(ps auxww | grep com.smartmarmot.orabbix.bootstra[p] | awk '{print $2}')
	if [[ "$PID" != "" ]]; then
		echo "Orabbix Oracle data collector is running (Found com.smartmarmot.orabbix.bootstrap running)"
		return 1
	else
		echo "Orabbix Oracle data collector is not running"
		return 0
	fi
}

start(){
        echo -n "Starting Orabbix service: "
	if [[ ! -f "${log4j_conf##file:}" ]]; then
		echo "ERROR: Cannot open ${log4j_conf##file:}"
		exit 1
	fi
	if [[ ! -f "$main_conf" ]]; then
		echo "ERROR: Cannot open $main_conf"
		exit 1
	fi

	is_running > /dev/null
	if (( $? == 1 )); then
		echo "Orabbix Oracle data collector is already running"
		exit 1
	fi

	CLASSPATH="$base/lib"
	while read -r jar; do
		CLASSPATH="$CLASSPATH:$jar"
	done < <(find $base/lib -name '*.jar')
	orabbix_jar=$(find $base -maxdepth 1 -type f -name '*orabbix*jar')
	CLASSPATH="$CLASSPATH:$orabbix_jar"
	JAVA_ARGS="-Duser.language=en -Duser.country=US -Dlog4j.configuration=file:$log4j_conf -cp $CLASSPATH com.smartmarmot.orabbix.bootstrap start $main_conf"
	pid=$(su - $user -c "java $JAVA_ARGS > /dev/null 2>&1 & echo \$!")
	sleep 1
	if  ps -p $pid > /dev/null 2>&1; then
		echo "$pid" > $pidfile
		echo "Orabbix started (PID $pid)"
	else
		echo "Orabbix failed to start. Please check log specified in $log4j_conf for errors."
		exit 1
	fi
}

stop(){
    echo -n "Stopping Orabbix service: "
	is_running > /dev/null
	if (( $? == 1 )); then
		kill $(cat $pidfile)
		if (( $? == 0 )); then
			rm $pidfile
		fi
		echo "stopped."
	else
		echo "not running."
	fi
}

restart(){
        stop
        start
}

status(){
	is_running
	if (( $? == 1 )); then
		exit 0
	fi
	exit 1
}

# See how we were called.
case "$1" in
        start)
                start
                ;;
        stop)
                stop
                ;;
        status)
                status
                ;;
        restart)
                restart
                ;;
        *)
                echo "Usage: $0 {start|stop|status|restart}"
                exit 1
esac
exit $RETVAL

                                                                                               
